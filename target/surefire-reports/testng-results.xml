<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="158752" started-at="2020-03-28T08:34:51Z" finished-at="2020-03-28T08:37:29Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="158752" started-at="2020-03-28T08:34:51Z" finished-at="2020-03-28T08:37:29Z">
      <class name="tests.Travel_mmt_yatra_Test">
        <test-method status="PASS" signature="launchBrowser(java.lang.String)[pri:0, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="launchBrowser" is-config="true" duration-ms="14026" started-at="2020-03-28T08:34:51Z" finished-at="2020-03-28T08:35:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="getPriceOfTheFirstFlight_mmt(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="getPriceOfTheFirstFlight_mmt" duration-ms="30217" started-at="2020-03-28T08:35:05Z" data-provider="mmtAndYatraTest" finished-at="2020-03-28T08:35:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Travel_mmt_yatra_Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.makemytrip.com/]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.yatra.com/]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bengaluru]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[6AM-12 Noon]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6AM-12 Noon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPriceOfTheFirstFlight_mmt -->
        <test-method status="PASS" signature="capturescreenshotAndGenerateExtentReport(org.testng.ITestResult)[pri:0, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="capturescreenshotAndGenerateExtentReport" is-config="true" duration-ms="9220" started-at="2020-03-28T08:35:35Z" finished-at="2020-03-28T08:35:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPriceOfTheFirstFlight_mmt status=SUCCESS method=Travel_mmt_yatra_Test.getPriceOfTheFirstFlight_mmt(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:tests.Travel_mmt_yatra_Test@5e853265] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturescreenshotAndGenerateExtentReport -->
        <test-method status="FAIL" signature="getPriceOfTheFirstFlight_yatra(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="getPriceOfTheFirstFlight_yatra" duration-ms="104044" started-at="2020-03-28T08:35:44Z" data-provider="mmtAndYatraTest" finished-at="2020-03-28T08:37:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Travel_mmt_yatra_Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.makemytrip.com/]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.yatra.com/]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bengaluru]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[6AM-12 Noon]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[6AM-12 Noon]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input data-role="none" readonly="readonly" type="text" autocomplete="false" name="flight_origin_date" placeholder=" " id="BE_flight_origin_date" class="custom-date-input BE_flight_origin_date"> is not clickable at point (250, 331). Other element would receive the click: <span>...</span>
  (Session info: chrome=80.0.3987.149)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-EEMLOJPU', ip: '192.168.0.125', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_242'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\hruth\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62501}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: fda738a15d96822c618df322d3d414ac]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input data-role="none" readonly="readonly" type="text" autocomplete="false" name="flight_origin_date" placeholder=" " id="BE_flight_origin_date" class="custom-date-input BE_flight_origin_date"> is not clickable at point (250, 331). Other element would receive the click: <span>...</span>
  (Session info: chrome=80.0.3987.149)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-EEMLOJPU', ip: '192.168.0.125', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_242'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\hruth\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62501}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: fda738a15d96822c618df322d3d414ac
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at pages.Yatra_HomePage.selectDepartureDate(Yatra_HomePage.java:98)
at tests.Travel_mmt_yatra_Test.getPriceOfTheFirstFlight_yatra(Travel_mmt_yatra_Test.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPriceOfTheFirstFlight_yatra -->
        <test-method status="PASS" signature="capturescreenshotAndGenerateExtentReport(org.testng.ITestResult)[pri:0, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="capturescreenshotAndGenerateExtentReport" is-config="true" duration-ms="680" started-at="2020-03-28T08:37:29Z" finished-at="2020-03-28T08:37:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPriceOfTheFirstFlight_yatra status=FAILURE method=Travel_mmt_yatra_Test.getPriceOfTheFirstFlight_yatra(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:tests.Travel_mmt_yatra_Test@5e853265] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturescreenshotAndGenerateExtentReport -->
        <test-method status="SKIP" signature="compareThePriceOfFlight_mmt_yatra()[pri:3, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="compareThePriceOfFlight_mmt_yatra" duration-ms="0" started-at="2020-03-28T08:37:29Z" depends-on-methods="tests.Travel_mmt_yatra_Test.getPriceOfTheFirstFlight_yatra, tests.Travel_mmt_yatra_Test.getPriceOfTheFirstFlight_mmt" finished-at="2020-03-28T08:37:29Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Travel_mmt_yatra_Test.compareThePriceOfFlight_mmt_yatra()[pri:3, instance:tests.Travel_mmt_yatra_Test@5e853265] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Travel_mmt_yatra_Test.compareThePriceOfFlight_mmt_yatra()[pri:3, instance:tests.Travel_mmt_yatra_Test@5e853265] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareThePriceOfFlight_mmt_yatra -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:tests.Travel_mmt_yatra_Test@5e853265]" name="cleanup" is-config="true" duration-ms="2937" started-at="2020-03-28T08:37:29Z" finished-at="2020-03-28T08:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- tests.Travel_mmt_yatra_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
